generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clusters {
  cluster_id   String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String        @db.VarChar
  email        String        @unique @db.VarChar 
  password     String        @db.VarChar
  description  String        @db.VarChar
  multi_tenant Boolean       @default(true)
  isactive     Boolean?      @default(true)
  collections  collections[]
  documents    documents[]
  users        users[]
}

model collections {
  collection_id String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cluster_id    String?     @db.Uuid
  name          String      @db.VarChar
  clusters      clusters?   @relation(fields: [cluster_id], references: [cluster_id], onDelete: NoAction, onUpdate: NoAction)
  documents     documents[]
}

model documents {
  document_id     String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id         String?      @db.Uuid
  collection_id   String?      @db.Uuid
  cluster_id      String?      @db.Uuid
  data            Json         @default("{}")
  collection_name String?      @db.VarChar
  clusters        clusters?    @relation(fields: [cluster_id], references: [cluster_id], onDelete: NoAction, onUpdate: NoAction)
  collections     collections? @relation(fields: [collection_id], references: [collection_id], onDelete: NoAction, onUpdate: NoAction)
  users           users?       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id    String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cluster_id String?     @db.Uuid
  data       Json        @default("{}")
  clusters   clusters?   @relation(fields: [cluster_id], references: [cluster_id], onDelete: NoAction, onUpdate: NoAction)
  documents  documents[]
}
